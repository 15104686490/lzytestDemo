InnoDb存储引擎
后台线程
master thread
核心后台线程 负责将缓冲池中的数据异步刷新到磁盘  保证一致性
内部存在多个循环
主循环 后台循环 刷新循环 暂停循环
iO thread
AIO async io 处理IO请求 io thread负责这些io请求的回调 write read insertbuffer log
purge thread
事务提交后 undolog不在被需要  因此使用 该线程来对已经使用并分配的undo页进行回收
page cleaner thread
负责脏页刷新工作

内存
缓冲池
缓解CPU速度与磁盘速度之间的差别 通过内存速度缓解磁盘速度对性能的影响
数据库页的修改操作  首先修改缓冲池中的页 而后按照一定的频率刷新到磁盘  通过checkpoint 机制刷新回磁盘
缓冲池中的页类型： 索引页  数据页  undo页 插入缓存  自适应哈希索引 锁信息 数据字典信息
缓存管理机制 通常是lru 即使用频繁的在列表的前端  使用较少的页在列表的尾端  空间不足时首先释放列表尾部的页
缓冲池的默认的页大小默认为16kb
innodb中 lru优化  增加midpoint 即最新访问的页放在该处 避免类似扫描操作使数据被刷出 原因是这种操作会访问较多的页 甚至全部的页
而通常这些并不全部都是热点数据
重做日志缓冲
额外内存池
该引擎中对内存的管理通过一种堆内存的方式进行

check point
目的
1.缩短数据库的恢复时间
2.缓冲池空间不足时  将脏页刷新到磁盘
3.重做日志不可用时 刷新脏页
分为两种
sharp checkpoint
发生在数据库关闭时  将所有的脏页都刷新回磁盘
fuzzy checkpoint
只刷新一部分脏页

关键特性
插入缓存
两次写
自适应哈希索引
异步IO
刷新邻接页





